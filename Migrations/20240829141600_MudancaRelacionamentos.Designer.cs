// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _.VerdeViva.Data;

#nullable disable

namespace _.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240829141600_MudancaRelacionamentos")]
    partial class MudancaRelacionamentos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Dashboard.Cliente.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PkUsuario")
                        .HasColumnType("integer");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PkUsuario")
                        .IsUnique();

                    b.ToTable("tb_contato", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Dashboard.Cliente.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InformacoesAdicionais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PkUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PkUsuario")
                        .IsUnique();

                    b.ToTable("tb_endereco", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Dashboard.Cliente.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tb_usuario", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Dashboard.ContatoMensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tb_contato_mensagem", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Loja.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PkUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PkUsuario");

                    b.ToTable("tb_pedido", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Loja.PedidoProduto", b =>
                {
                    b.Property<int>("PkPedido")
                        .HasColumnType("integer");

                    b.Property<int>("PkProduto")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("PkPedido", "PkProduto");

                    b.HasIndex("PkProduto");

                    b.ToTable("tb_pedido_produto", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Producao.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tb_categoria", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Producao.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PkCategoria")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecoQuilo")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("numeric");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PkCategoria");

                    b.ToTable("tb_produto", (string)null);
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Dashboard.Cliente.Contato", b =>
                {
                    b.HasOne("_.VerdeViva.Models.Entities.Dashboard.Cliente.Usuario", "Usuario")
                        .WithOne("Contato")
                        .HasForeignKey("_.VerdeViva.Models.Entities.Dashboard.Cliente.Contato", "PkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Dashboard.Cliente.Endereco", b =>
                {
                    b.HasOne("_.VerdeViva.Models.Entities.Dashboard.Cliente.Usuario", "Usuario")
                        .WithOne("Endereco")
                        .HasForeignKey("_.VerdeViva.Models.Entities.Dashboard.Cliente.Endereco", "PkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Loja.Pedido", b =>
                {
                    b.HasOne("_.VerdeViva.Models.Entities.Dashboard.Cliente.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("PkUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Loja.PedidoProduto", b =>
                {
                    b.HasOne("_.VerdeViva.Models.Entities.Loja.Pedido", "Pedido")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("PkPedido");

                    b.HasOne("_.VerdeViva.Models.Entities.Producao.Produto", "Produto")
                        .WithMany("PedidoProdutos")
                        .HasForeignKey("PkProduto");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Producao.Produto", b =>
                {
                    b.HasOne("_.VerdeViva.Models.Entities.Producao.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("PkCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Dashboard.Cliente.Usuario", b =>
                {
                    b.Navigation("Contato")
                        .IsRequired();

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Loja.Pedido", b =>
                {
                    b.Navigation("PedidoProdutos");
                });

            modelBuilder.Entity("_.VerdeViva.Models.Entities.Producao.Produto", b =>
                {
                    b.Navigation("PedidoProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
